#!/usr/bin/env python3
"""
Test TTS functionality locally
"""

import asyncio
import sys
import os
from pathlib import Path

# Add current directory to path
sys.path.append(str(Path(__file__).parent))

from whatsapp_bot import EnhancedTTSService

async def test_tts():
    """Test TTS synthesis"""
    
    print("üé§ Testing TTS Service")
    print("=" * 40)
    
    # Initialize TTS service
    tts = EnhancedTTSService()
    
    # Test text in different languages
    test_cases = [
        ("Hello, this is a test message in English.", "en"),
        ("‡§®‡§Æ‡§∏‡•ç‡§§‡•á, ‡§Ø‡§π ‡§π‡§ø‡§Ç‡§¶‡•Ä ‡§Æ‡•á‡§Ç ‡§è‡§ï ‡§™‡§∞‡•Ä‡§ï‡•ç‡§∑‡§£ ‡§∏‡§Ç‡§¶‡•á‡§∂ ‡§π‡•à‡•§", "hi"),
        ("‡¶Ü‡¶∏‡¶∏‡¶æ‡¶≤‡¶æ‡¶Æ‡ßÅ ‡¶Ü‡¶≤‡¶æ‡¶á‡¶ï‡ßÅ‡¶Æ, ‡¶è‡¶ü‡¶ø ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶Ø‡¶º ‡¶è‡¶ï‡¶ü‡¶ø ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ‡¶∞ ‡¶¨‡¶æ‡¶∞‡ßç‡¶§‡¶æ‡•§", "bn"),
    ]
    
    for i, (text, lang) in enumerate(test_cases, 1):
        print(f"\n{i}. Testing {lang.upper()}:")
        print(f"   Text: {text}")
        
        result = await tts.synthesize_speech(text, lang)
        
        if result.get("audio_available"):
            print(f"   ‚úÖ Success: {result['audio_file']}")
            print(f"   üìä File size: {result.get('file_size', 0)} bytes")
        else:
            print(f"   ‚ùå Failed: {result.get('error', 'Unknown error')}")
    
    print("\n" + "=" * 40)
    print("üéØ TTS test completed!")

if __name__ == "__main__":
    asyncio.run(test_tts())